{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/analytics/analytics.component.css","webpack:///./src/app/analytics/analytics.component.html","webpack:///./src/app/analytics/analytics.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bar-details/bar-details.component.css","webpack:///./src/app/bar-details/bar-details.component.html","webpack:///./src/app/bar-details/bar-details.component.ts","webpack:///./src/app/bars.service.ts","webpack:///./src/app/bartender-details/bartender-details.component.css","webpack:///./src/app/bartender-details/bartender-details.component.html","webpack:///./src/app/bartender-details/bartender-details.component.ts","webpack:///./src/app/bartender.service.ts","webpack:///./src/app/bartender/bartender.component.css","webpack:///./src/app/bartender/bartender.component.html","webpack:///./src/app/bartender/bartender.component.ts","webpack:///./src/app/beer-details/beer-details.component.css","webpack:///./src/app/beer-details/beer-details.component.html","webpack:///./src/app/beer-details/beer-details.component.ts","webpack:///./src/app/beers.service.ts","webpack:///./src/app/beers/beers.component.css","webpack:///./src/app/beers/beers.component.html","webpack:///./src/app/beers/beers.component.ts","webpack:///./src/app/drinker-details/drinker-details.component.css","webpack:///./src/app/drinker-details/drinker-details.component.html","webpack:///./src/app/drinker-details/drinker-details.component.ts","webpack:///./src/app/drinkers.service.ts","webpack:///./src/app/drinkers/drinkers.component.css","webpack:///./src/app/drinkers/drinkers.component.html","webpack:///./src/app/drinkers/drinkers.component.ts","webpack:///./src/app/manufacturer-details/manufacturer-details.component.css","webpack:///./src/app/manufacturer-details/manufacturer-details.component.html","webpack:///./src/app/manufacturer-details/manufacturer-details.component.ts","webpack:///./src/app/manufacturer.service.ts","webpack:///./src/app/manufacturers/manufacturers.component.css","webpack:///./src/app/manufacturers/manufacturers.component.html","webpack:///./src/app/manufacturers/manufacturers.component.ts","webpack:///./src/app/modify.service.ts","webpack:///./src/app/modify/modify.component.css","webpack:///./src/app/modify/modify.component.html","webpack:///./src/app/modify/modify.component.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FuYWx5dGljcy9hbmFseXRpY3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\r\\n  analytics works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-analytics',\r\n  templateUrl: './analytics.component.html',\r\n  styleUrls: ['./analytics.component.css']\r\n})\r\nexport class AnalyticsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { BarDetailsComponent } from './bar-details/bar-details.component';\r\nimport { BeersComponent } from './beers/beers.component';\r\nimport { DrinkersComponent } from './drinkers/drinkers.component';\r\nimport { DrinkerDetailsComponent } from './drinker-details/drinker-details.component';\r\nimport { BeerDetailsComponent } from './beer-details/beer-details.component';\r\nimport { BartenderComponent } from './bartender/bartender.component';\r\nimport { ManufacturersComponent } from './manufacturers/manufacturers.component';\r\nimport { ManufacturerDetailsComponent } from './manufacturer-details/manufacturer-details.component';\r\nimport { BartenderDetailsComponent } from './bartender-details/bartender-details.component';\r\nimport { ModifyComponent } from './modify/modify.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    redirectTo: 'bars'\r\n  },\r\n  {\r\n    path: 'bars',\r\n    pathMatch: 'full',\r\n    component: WelcomeComponent\r\n  },\r\n  {\r\n    path: 'static',\r\n    pathMatch: 'full',\r\n    redirectTo: 'bars'\r\n  },\r\n  {\r\n    path: 'bars/:bar',\r\n    pathMatch: 'full',\r\n    component: BarDetailsComponent\r\n  },\r\n  {\r\n    path: 'beers',\r\n    pathMatch: 'full',\r\n    component: BeersComponent\r\n  },\r\n  {\r\n    path: 'beers/:beer',\r\n    pathMatch: 'full',\r\n    component: BeerDetailsComponent\r\n  },\r\n  {\r\n    path: 'drinkers',\r\n    pathMatch: 'full',\r\n    component: DrinkersComponent\r\n  },\r\n  {\r\n    path: 'drinkers/:drinker',\r\n    pathMatch: 'full',\r\n    component: DrinkerDetailsComponent\r\n  },\r\n  {\r\n    path: 'bartenders',\r\n    pathMatch: 'full',\r\n    component: BartenderComponent\r\n  },\r\n  {\r\n    path: 'bartenders/:bartender',\r\n    pathMatch: 'full',\r\n    component: BartenderDetailsComponent\r\n  },\r\n  {\r\n    path: 'manufacturers',\r\n    pathMatch: 'full',\r\n    component: ManufacturersComponent\r\n  },\r\n  {\r\n    path: 'manufacturers/:manufacturer',\r\n    pathMatch: 'full',\r\n    component: ManufacturerDetailsComponent\r\n  },\r\n  {\r\n    path: 'modify',\r\n    pathMatch: 'full',\r\n    component: ModifyComponent\r\n  }\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\" >\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">BBDPlus</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n    <ul class=\\\"navbar-nav\\\">\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive =\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/bars\\\">Bars</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive =\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/beers\\\">Beers</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive =\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/drinkers\\\">Drinkers</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\"  routerLinkActive =\\\"active\\\">\\r\\n          <a class=\\\"nav-link disabled\\\" routerLink=\\\"/manufacturers\\\">Manufacturers</a>\\r\\n        </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive =\\\"active\\\">\\r\\n        <a class=\\\"nav-link disabled\\\" routerLink=\\\"/bartenders\\\">Bartenders</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive =\\\"active\\\">\\r\\n        <a class=\\\"nav-link disabled\\\" routerLink=\\\"/modify\\\">Modify</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'BBDPlus-ui';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\n\r\nimport {TableModule} from 'primeng/table';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { BarDetailsComponent } from './bar-details/bar-details.component';\r\nimport { BeersComponent } from './beers/beers.component';\r\nimport { DrinkersComponent } from './drinkers/drinkers.component';\r\nimport { DrinkerDetailsComponent } from './drinker-details/drinker-details.component';\r\nimport { BeerDetailsComponent } from './beer-details/beer-details.component';\r\nimport { ManufacturersComponent } from './manufacturers/manufacturers.component';\r\nimport { ManufacturerDetailsComponent } from './manufacturer-details/manufacturer-details.component';\r\nimport { BartenderComponent } from './bartender/bartender.component';\r\nimport { BartenderDetailsComponent } from './bartender-details/bartender-details.component';\r\nimport { AnalyticsComponent } from './analytics/analytics.component';\r\nimport { ModifyComponent } from './modify/modify.component';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {TabViewModule} from 'primeng/tabview';\r\nimport {TabMenuModule} from 'primeng/tabmenu';\r\nimport {PanelMenuModule} from 'primeng/panelmenu';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\r\nimport {PaginatorModule} from 'primeng/paginator';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WelcomeComponent,\r\n    BarDetailsComponent,\r\n    BeersComponent,\r\n    DrinkersComponent,\r\n    DrinkerDetailsComponent,\r\n    BeerDetailsComponent,\r\n    ManufacturersComponent,\r\n    ManufacturerDetailsComponent,\r\n    BartenderComponent,\r\n    BartenderDetailsComponent,\r\n    AnalyticsComponent,\r\n    ModifyComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    TableModule,\r\n    DropdownModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    PaginatorModule,\r\n    InputTextModule,\r\n    TabViewModule,\r\n    TabMenuModule,\r\n    PanelMenuModule,\r\n    ButtonModule,\r\n    ConfirmDialogModule\r\n  ],\r\n  providers: [HttpClient],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jhci1kZXRhaWxzL2Jhci1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <h1 class=\\\"display-4\\\">{{barName}}</h1>\\r\\n      <p class=\\\"bar-details\\\" *ngIf =\\\"barDetails\\\">\\r\\n        {{barDetails?.address}}, {{barDetails?.city}} {{barDetails?.state}}\\r\\n        <br>\\r\\n        {{barDetails?.phone}}   \\r\\n        <br>\\r\\n        Open: {{barDetails?.open}} \\r\\n        <br>\\r\\n        Close: {{barDetails?.close}}\\r\\n        <br>\\r\\n        License: {{barDetails?.license}}\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n  <div class=\\\"container\\\">\\r\\n    <br>\\r\\n    <div id =\\\"bargraph1\\\">\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n  <br>\\r\\n  <div class=\\\"container\\\">\\r\\n    <br>\\r\\n    <div id =\\\"bargraph2\\\">\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n  <div class=\\\"container\\\">\\r\\n    <h5>Time Distrbutions</h5>\\r\\n    <p-table [value]=\\\"barTimeDistr\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n      <ng-template pTemplate=\\\"header\\\">\\r\\n        <tr>\\r\\n          <th>Time</th>\\r\\n          <th>Sales during Time</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"body\\\" let-barTimeDistr>\\r\\n          <tr>\\r\\n          <td>{{barTimeDistr.time}}</td>\\r\\n          <td>{{barTimeDistr.sales}}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div class=\\\"container\\\">\\r\\n      <h5>Busiest Days</h5>\\r\\n      <p-table [value]=\\\"barBusiestDays\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n          <tr>\\r\\n            <th>Time</th>\\r\\n            <th>Sales during day</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-barBusiestDays>\\r\\n            <tr>\\r\\n            <td>{{barBusiestDays.date}}</td>\\r\\n            <td>{{barBusiestDays.sold}}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </p-table>\\r\\n      </div>\\r\\n\\r\\n    <br>\\r\\n    <br>\\r\\n    <div class=\\\"container\\\">\\r\\n      <br>\\r\\n      <div id =\\\"bargraph3\\\">\\r\\n  \\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n    <br>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BarsService, Bar } from '../bars.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\ndeclare const Highcharts: any;\r\n\r\n@Component({\r\n  selector: 'app-bar-details',\r\n  templateUrl: './bar-details.component.html',\r\n  styleUrls: ['./bar-details.component.css']\r\n})\r\nexport class BarDetailsComponent implements OnInit {\r\n\r\n  barName : string;\r\n  barDetails : Bar;\r\n  barTimeDistr : any[];\r\n  barBusiestDays:any[];\r\n\r\n  constructor(\r\n    private barService: BarsService,\r\n    private route: ActivatedRoute,\r\n  ) { \r\n      route.paramMap.subscribe((paramMap) => {\r\n      this.barName = paramMap.get('bar');\r\n      barService.getBar(this.barName).subscribe(\r\n       data =>{\r\n         this.barDetails = data;\r\n       },\r\n       (error: HttpResponse<any>) => {\r\n         if (error.status === 404){\r\n           alert('bar not found');\r\n         }\r\n         else{\r\n           console.error(error.status + '-' + error.body);\r\n           alert('error occurred on the server. please check the browser console');\r\n         }\r\n       }\r\n      );\r\n\r\n      barService.getbarlarSpenders(this.barName).subscribe(\r\n        data=>{\r\n          const barlist = [];\r\n          const spentlist= [];\r\n  \r\n          data.forEach(barvar => {\r\n            barlist.push(barvar.drinker)\r\n            spentlist.push(barvar.spend)\r\n          });\r\n  \r\n          this.renderChart1(barlist,spentlist);\r\n        }\r\n      );\r\n\r\n      barService.gettoptenbrand(this.barName).subscribe(\r\n        data=>{\r\n          const manflist = [];\r\n          const salelist= [];\r\n  \r\n          data.forEach(barvar => {\r\n            manflist.push(barvar.manufacturer +\" \" +barvar.date)\r\n            salelist.push(barvar.count)\r\n          });\r\n  \r\n          this.renderChart2(manflist,salelist);\r\n        }\r\n      );\r\n  \r\n      barService.gettimedistr(this.barName).subscribe(\r\n        data =>{\r\n          this.barTimeDistr = data;\r\n        });\r\n\r\n        barService.getbusiestdays(this.barName).subscribe(\r\n          data =>{\r\n            this.barBusiestDays = data;\r\n          });\r\n\r\n        barService.getfractionsold(this.barName).subscribe(\r\n          data=>{\r\n            const itemlist = [];\r\n            const fractionlist= [];\r\n    \r\n            data.forEach(barvar => {\r\n              itemlist.push(barvar.item +\" \" +barvar.date)\r\n              fractionlist.push(barvar.fsold)\r\n            });\r\n    \r\n            this.renderChart3(itemlist,fractionlist);\r\n          }\r\n        );\r\n    \r\n\r\n\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  renderChart1(drinker: string[], spender: number[]){\r\n    Highcharts.chart('bargraph1', {\r\n      chart: {\r\n        type : 'column'\r\n      },\r\n      title: {\r\n        text: 'Drinker that Spends the Most'\r\n      },\r\n      xAxis:{\r\n        categories: drinker,\r\n        title: {\r\n          text: 'Drinker'\r\n        }\r\n      },\r\n      yAxis: {\r\n        min: 0,\r\n        title: {\r\n          text: 'Spent'\r\n        },\r\n        labels: {\r\n          overflow: 'justify'\r\n        }\r\n      },\r\n      plotOptions: {\r\n        drinker: {\r\n          dataLabels: {\r\n            enabled: true\r\n          }\r\n        }\r\n      },\r\n      legend:{\r\n        enabled:false\r\n      },\r\n      credits:{\r\n        enabled: false\r\n      },\r\n      series: [{\r\n        data: spender\r\n      }]\r\n    })\r\n  }\r\n\r\n\r\n  renderChart2(manufacturer: string[], sales: number[]){\r\n    Highcharts.chart('bargraph2', {\r\n      chart: {\r\n        type : 'column'\r\n      },\r\n      title: {\r\n        text: 'Top 10 Beer Brands'\r\n      },\r\n      xAxis:{\r\n        categories: manufacturer,\r\n        title: {\r\n          text: 'Manufacturer'\r\n        }\r\n      },\r\n      yAxis: {\r\n        min: 0,\r\n        title: {\r\n          text: 'Sales'\r\n        },\r\n        labels: {\r\n          overflow: 'justify'\r\n        }\r\n      },\r\n      plotOptions: {\r\n        drinker: {\r\n          dataLabels: {\r\n            enabled: true\r\n          }\r\n        }\r\n      },\r\n      legend:{\r\n        enabled:false\r\n      },\r\n      credits:{\r\n        enabled: false\r\n      },\r\n      series: [{\r\n        data: sales\r\n      }]\r\n    })\r\n  }\r\n\r\n  renderChart3(item: string[], fractionsold: number[]){\r\n    Highcharts.chart('bargraph3', {\r\n      chart: {\r\n        type : 'column'\r\n      },\r\n      title: {\r\n        text: 'Fraction Sold'\r\n      },\r\n      xAxis:{\r\n        categories: item,\r\n        title: {\r\n          text: 'Item'\r\n        }\r\n      },\r\n      yAxis: {\r\n        min: 0,\r\n        title: {\r\n          text: 'Fraction Sold'\r\n        },\r\n        labels: {\r\n          overflow: 'justify'\r\n        }\r\n      },\r\n      plotOptions: {\r\n        drinker: {\r\n          dataLabels: {\r\n            enabled: true\r\n          }\r\n        }\r\n      },\r\n      legend:{\r\n        enabled:false\r\n      },\r\n      credits:{\r\n        enabled: false\r\n      },\r\n      series: [{\r\n        data: fractionsold\r\n      }]\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LocationChangeListener } from '@angular/common';\r\n\r\n\r\n\r\nexport interface Bar{\r\n  name: string;\r\n  open : string;\r\n  close : string;\r\n  license : string;\r\n  phone : string;\r\n  address : string;\r\n  city : string;\r\n  state : string; \r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BarsService {\r\n\r\n  constructor(\r\n    public http: HttpClient\r\n  ) { }\r\n\r\n  getBars(){\r\n    return this.http.get<Bar[]>('/api/bar');\r\n  }\r\n\r\n  getBar(bar: string){\r\n    return this.http.get<Bar>('/api/bar/' + bar)\r\n  }\r\n\r\n  getbarlarSpenders(bar: string){\r\n    return this.http.get<any[]>('/api/larspender/' + bar)\r\n  }\r\n\r\n  gettoptenbrand(bar: string){\r\n    return this.http.get<any[]>('/api/toptenbrand/' + bar)\r\n  }\r\n\r\n  gettimedistr(bar: string){\r\n    return this.http.get<any[]>('/api/timedistr/' + bar)\r\n  }\r\n\r\n  getbusiestdays(bar:string){\r\n    return this.http.get<any[]>('/api/busiestdays/' + bar)\r\n  }\r\n  \r\n  getfractionsold(bar: string){\r\n    return this.http.get<any[]>('/api/fractionsold/' + bar)\r\n  }\r\n\r\n \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhcnRlbmRlci1kZXRhaWxzL2JhcnRlbmRlci1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <h1 class=\\\"display-4\\\">{{bartenderName}}</h1>\\r\\n  </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <h5>Shift Beer Sales</h5>\\r\\n  <p-table [value]=\\\"sales\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n    <ng-template pTemplate=\\\"header\\\">\\r\\n      <tr>\\r\\n        <th>Date</th>\\r\\n        <th>Bar</th>\\r\\n        <th>Item</th>\\r\\n        <th>Sold</th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-sale>\\r\\n        <tr>\\r\\n        <td>{{sale.date}}</td>\\r\\n        <td>{{sale.bar}}</td>\\r\\n        <td>{{sale.item}}</td>\\r\\n        <td>{{sale.sold}}</td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </p-table>\\r\\n</div>\\r\\n\\r\\n<br><br>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BartenderService } from '../bartender.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-bartender-details',\r\n  templateUrl: './bartender-details.component.html',\r\n  styleUrls: ['./bartender-details.component.css']\r\n})\r\nexport class BartenderDetailsComponent implements OnInit {\r\n\r\n  bartenderName: string;\r\n  sales: any[];\r\n\r\n\r\n  constructor(private bartenderService: BartenderService, private route: ActivatedRoute) {\r\n\r\n    route.paramMap.subscribe((paramMap) => {\r\n      \r\n      this.bartenderName = paramMap.get('bartender');\r\n      \r\n      \r\n      bartenderService.shift_sold(this.bartenderName).subscribe(\r\n       data =>{\r\n         this.sales = data;\r\n       },\r\n       (error: HttpResponse<any>) => {\r\n        if (error.status === 404){\r\n          alert('Bartender not found');\r\n        }\r\n        else{\r\n          console.error(error.status + '-' + error.body);\r\n          alert('error occurred on the server. please check the browser console');\r\n        }\r\n      }\r\n      );\r\n    \r\n    \r\n    \r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BartenderService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getBartenders(){\r\n    return this.http.get<any[]>('/api/bartender')\r\n  }\r\n\r\n  shift_sold(name){\r\n    return this.http.get<any[]>('/api/bartender/' + name)\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhcnRlbmRlci9iYXJ0ZW5kZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h2 class=\\\"text center font weight light\\\">Bartenders</h2>\\r\\n    <p-table [value]=\\\"bartenders\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n      <ng-template pTemplate=\\\"header\\\">\\r\\n        <tr>\\r\\n          <th>Name</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"body\\\" let-bartender>\\r\\n        <tr>\\r\\n         <td>\\r\\n            <a routerLink = \\\"/bartenders/{{bartender.name}}\\\">\\r\\n              {{bartender.name}}\\r\\n            </a>\\r\\n            </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </div>  \"","import { Component, OnInit } from '@angular/core';\r\nimport { BartenderService } from '../bartender.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-bartender',\r\n  templateUrl: './bartender.component.html',\r\n  styleUrls: ['./bartender.component.css']\r\n})\r\nexport class BartenderComponent implements OnInit {\r\n\r\n  bartenders: any[];\r\n\r\n  constructor(\r\n    private bartenderService: BartenderService,\r\n    private route: ActivatedRoute\r\n  ) { \r\n    this.bartenderService.getBartenders().subscribe(\r\n    data => {\r\n      this.bartenders = data;\r\n    }\r\n  ); \r\n}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JlZXItZGV0YWlscy9iZWVyLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n<div class=\\\"jumbotron jumbotron-fluid\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <h1 class=\\\"display-4\\\">{{beerName}}</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n<br>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <h5>Top 10 Bars Where this Beer Sells the Most</h5>\\r\\n  <p-table [value]=\\\"beerDetails\\\">\\r\\n    <ng-template pTemplate=\\\"header\\\">\\r\\n      <tr>\\r\\n        <th>Bar</th>\\r\\n        <th>Sold</th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-beerDetails>\\r\\n        <tr>\\r\\n        <td>{{beerDetails.bar}}</td>\\r\\n        <td>{{beerDetails.sells}}</td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </p-table>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<br>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <h5>Drinkers who Consume this Beer the Most</h5>\\r\\n\\r\\n    <p-table [value]=\\\"beerConsumes\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n      <ng-template pTemplate=\\\"header\\\">\\r\\n        <tr>\\r\\n          <th>Drinker</th>\\r\\n          <th>Consumes</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"body\\\" let-beerConsumes>\\r\\n          <tr>\\r\\n          <td>{{beerConsumes.drinker}}</td>\\r\\n          <td>{{beerConsumes.consumes}}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </div>\\r\\n<br>\\r\\n<br>\\r\\n\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <h5>Time Distribution of when this Beer Sells the Most</h5>\\r\\n\\r\\n    <p-table [value]=\\\"beerTimes\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n      <ng-template pTemplate=\\\"header\\\">\\r\\n        <tr>\\r\\n          <th>Time</th>\\r\\n          <th>Sells</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"body\\\" let-beerTimes>\\r\\n          <tr>\\r\\n          <td>{{beerTimes.time}}</td>\\r\\n          <td>{{beerTimes.sells}}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </div>\\r\\n<br>\\r\\n<br>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BeersService  } from '../beers.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-beer-details',\r\n  templateUrl: './beer-details.component.html',\r\n  styleUrls: ['./beer-details.component.css']\r\n})\r\nexport class BeerDetailsComponent implements OnInit {\r\n\r\n  beerName : string;\r\n  beerDetails: any[];\r\n  beerConsumes: any[];\r\n  beerTimes: any[];\r\n\r\n  constructor(\r\n    private beerService: BeersService,\r\n    private route: ActivatedRoute\r\n  ) { \r\n    route.paramMap.subscribe((paramMap) => {\r\n    this.beerName = paramMap.get('beer');\r\n    beerService.getBeer(this.beerName).subscribe(\r\n      data =>{\r\n        this.beerDetails = data;\r\n      },\r\n      (error: HttpResponse<any>) => {\r\n        if (error.status === 404){\r\n          alert('Beer not found');\r\n        }\r\n        else{\r\n          console.error(error.status + '-' + error.body);\r\n          alert('error occurred on the server. please check the browser console');\r\n        }\r\n      }\r\n     );\r\n     beerService.getConsumes(this.beerName).subscribe(\r\n      data =>{\r\n        this.beerConsumes = data;\r\n      });\r\n    \r\n      beerService.gettimes(this.beerName).subscribe(\r\n        data =>{\r\n          this.beerTimes = data;\r\n        });\r\n    }\r\n  );}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LocationChangeListener } from '@angular/common';\r\n\r\n// export interface Beer{\r\n//   bar: string;\r\n//   drinker : string;\r\n//   count : string;\r\n// }\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BeersService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getBeers(){\r\n    return this.http.get<any[]>('/api/beer')\r\n  }\r\n\r\n  getBeer(beer:string){\r\n    return this.http.get<any[]>('/api/beer/' + beer)\r\n  }\r\n\r\n  getConsumes(beer:string){\r\n    return this.http.get<any[]>('/api/consume/' + beer)\r\n  }\r\n\r\n  gettimes(beer:string){\r\n    return this.http.get<any[]>('/api/time/' + beer)\r\n  }\r\n  \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JlZXJzL2JlZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n  <div class=\\\"container\\\">\\r\\n    <h2 class=\\\"text center font weight light\\\">Beers</h2>\\r\\n    <p-table [value]=\\\"beers\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n      <ng-template pTemplate=\\\"header\\\">\\r\\n        <tr>\\r\\n          <th>Name</th>\\r\\n          <th>Manufacturer</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"body\\\" let-beer>\\r\\n        <tr>\\r\\n         <td>\\r\\n            <a routerLink = \\\"/beers/{{ beer.item }}\\\">\\r\\n              {{beer.item}}\\r\\n            </a>\\r\\n            </td> \\r\\n          <td>{{beer.manufacturer}}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </div>  \\r\\n<br>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BeersService } from '../beers.service';\r\n\r\n@Component({\r\n  selector: 'app-beers',\r\n  templateUrl: './beers.component.html',\r\n  styleUrls: ['./beers.component.css']\r\n})\r\nexport class BeersComponent implements OnInit {\r\n\r\n  beers : any[];\r\n\r\n  constructor(private beerService: BeersService) {\r\n    this.beerService.getBeers().subscribe(\r\n      data => {\r\n        this.beers = data;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXItZGV0YWlscy9kcmlua2VyLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <h1 class=\\\"display-4\\\">{{drinkerName}}</h1>\\r\\n      <p class=\\\"drinker-details\\\" *ngIf =\\\"drinkerDetails\\\">\\r\\n        {{drinkerDetails?.address}}, {{drinkerDetails?.city}} {{drinkerDetails?.state}}\\r\\n        <br>\\r\\n        {{drinkerDetails?.phone}}\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"container\\\">\\r\\n      <h5>Transactions Ordered by Time and Grouped by Different Bars</h5>\\r\\n      <p-table [value]=\\\"drinkerTrans\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n          <tr>\\r\\n            <th>Bar</th>\\r\\n            <th>Count</th>\\r\\n            <th>Date</th>\\r\\n            <th>ID</th>\\r\\n            <th>Item</th>\\r\\n            <th>Price</th>\\r\\n            <th>Time</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-drinkerTrans>\\r\\n            <tr>\\r\\n            <td>{{drinkerTrans.bar}}</td>\\r\\n            <td>{{drinkerTrans.count}}</td>\\r\\n            <td>{{drinkerTrans.date}}</td>\\r\\n            <td>{{drinkerTrans.id}}</td>\\r\\n            <td>{{drinkerTrans.item}}</td>\\r\\n            <td>{{drinkerTrans.price}}</td>\\r\\n            <td>{{drinkerTrans.time}}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </p-table>\\r\\n    </div>\\r\\n\\r\\n    <br>\\r\\n    <br>\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n    <br>\\r\\n    <div id =\\\"drinkergraph1\\\">\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n  <br>\\r\\n<div class=\\\"container\\\">\\r\\n  <br>\\r\\n  <div id =\\\"drinkergraph2\\\">\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n  <br>\\r\\n  <br>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { DrinkersService } from '../drinkers.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\ndeclare const Highcharts: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-drinker-details',\r\n  templateUrl: './drinker-details.component.html',\r\n  styleUrls: ['./drinker-details.component.css']\r\n})\r\nexport class DrinkerDetailsComponent implements OnInit {\r\n\r\n  drinkerName : string;\r\n  drinkerDetails : any[];\r\n  drinkerTrans: any[];\r\n\r\n  constructor(\r\n    private drinkerService: DrinkersService,\r\n    private route: ActivatedRoute\r\n  ) {route.paramMap.subscribe((paramMap) => {\r\n    this.drinkerName = paramMap.get('drinker');\r\n    drinkerService.getDrinker(this.drinkerName).subscribe(\r\n     data =>{\r\n       this.drinkerDetails = data;\r\n     },\r\n     (error: HttpResponse<any>) => {\r\n       if (error.status === 404){\r\n         alert('Dinker not found');\r\n       }\r\n       else{\r\n         console.error(error.status + '-' + error.body);\r\n         alert('error occurred on the server. please check the browser console');\r\n       }\r\n     }\r\n    );\r\n    drinkerService.getdrinkerTrans(this.drinkerName).subscribe(\r\n      data=>{\r\n        this.drinkerTrans = data;\r\n      }\r\n    );\r\n    \r\n    \r\n    drinkerService.getdrinkerGraph1(this.drinkerName).subscribe(\r\n      data=>{\r\n        const beers = [];\r\n        const counts= [];\r\n\r\n        data.forEach(beer => {\r\n          beers.push(beer.item)\r\n          counts.push(beer.ordermost)\r\n        });\r\n\r\n        this.renderChart1(beers,counts);\r\n      }\r\n    );\r\n\r\n    drinkerService.getdrinkerGraph2(this.drinkerName).subscribe(\r\n      data=>{\r\n        const barlist = [];\r\n        const spentlist= [];\r\n\r\n        data.forEach(barvar => {\r\n          barlist.push(barvar.bar + \" \" + barvar.date)\r\n          spentlist.push(barvar.spend)\r\n        });\r\n\r\n        this.renderChart2(barlist,spentlist);\r\n      }\r\n    );\r\n    \r\n    \r\n\r\n\r\n  }); \r\n}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  renderChart1(beers: string[], counts: number[]){\r\n    Highcharts.chart('drinkergraph1', {\r\n      chart: {\r\n        type : 'column'\r\n      },\r\n      title: {\r\n        text: 'Beers Ordered Most'\r\n      },\r\n      xAxis:{\r\n        categories: beers,\r\n        title: {\r\n          text: 'Beer'\r\n        }\r\n      },\r\n      yAxis: {\r\n        min: 0,\r\n        title: {\r\n          text: 'Purchased'\r\n        },\r\n        labels: {\r\n          overflow: 'justify'\r\n        }\r\n      },\r\n      plotOptions: {\r\n        beer: {\r\n          dataLabels: {\r\n            enabled: true\r\n          }\r\n        }\r\n      },\r\n      legend:{\r\n        enabled:false\r\n      },\r\n      credits:{\r\n        enabled: false\r\n      },\r\n      series: [{\r\n        data: counts\r\n      }]\r\n    })\r\n  }\r\n\r\n  renderChart2(beers: string[], counts: number[]){\r\n    Highcharts.chart('drinkergraph2', {\r\n      chart: {\r\n        type : 'column'\r\n      },\r\n      title: {\r\n        text: 'Spending on Different Bars'\r\n      },\r\n      xAxis:{\r\n        categories: beers,\r\n        title: {\r\n          text: 'Bars and Dates'\r\n        }\r\n      },\r\n      yAxis: {\r\n        min: 0,\r\n        title: {\r\n          text: 'Spent'\r\n        },\r\n        labels: {\r\n          overflow: 'justify'\r\n        }\r\n      },\r\n      plotOptions: {\r\n        beer: {\r\n          dataLabels: {\r\n            enabled: true\r\n          }\r\n        }\r\n      },\r\n      legend:{\r\n        enabled:false\r\n      },\r\n      credits:{\r\n        enabled: false\r\n      },\r\n      series: [{\r\n        data: counts\r\n      }]\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DrinkersService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getDrinkers(){\r\n    return this.http.get<any[]>('/api/drinker')\r\n  }\r\n\r\n  getDrinker(drinker:string){\r\n    return this.http.get<any[]>('/api/drinker/' + drinker)\r\n  }\r\n\r\n  getdrinkerTrans(drinker:string){\r\n    return this.http.get<any[]>('/api/transaction/' + drinker)\r\n  }\r\n\r\n  getdrinkerGraph1(drinker:string){\r\n    return this.http.get<any[]>('/api/drinkergraph1/' + drinker)\r\n  }\r\n\r\n  getdrinkerGraph2(drinker:string){\r\n    return this.http.get<any[]>('/api/drinkergraph2/' + drinker)\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXJzL2RyaW5rZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n  <div class=\\\"container\\\">\\r\\n      <h2 class=\\\"text center font weight light\\\">Drinkers</h2>\\r\\n      <p-table [value]=\\\"drinkers\\\" [paginator]=\\\"true\\\" [rows]=\\\"15\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n          <tr>\\r\\n            <th>Name</th>\\r\\n            <th>Phone</th>\\r\\n            <th>Address</th>\\r\\n            <th>City</th>\\r\\n            <th>State</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-drinker>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <a routerLink = \\\"/drinkers/{{ drinker.name }}\\\"> \\r\\n                {{drinker.name}}\\r\\n              </a>\\r\\n            </td>\\r\\n            <td>{{drinker.phone}}</td>\\r\\n            <td>{{drinker.address}}</td>\\r\\n            <td>{{drinker.city}}</td>\\r\\n            <td>{{drinker.state}}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </p-table>\\r\\n    </div>  \\r\\n    <br>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DrinkersService } from '../drinkers.service';\r\n\r\n@Component({\r\n  selector: 'app-drinkers',\r\n  templateUrl: './drinkers.component.html',\r\n  styleUrls: ['./drinkers.component.css']\r\n})\r\nexport class DrinkersComponent implements OnInit {\r\n\r\n  drinkers : any[];\r\n\r\n  constructor(private drinkerService: DrinkersService) { \r\n    this.drinkerService.getDrinkers().subscribe(\r\n      data => {\r\n        this.drinkers = data;\r\n      },\r\n      error => {\r\n        alert('could not retrieve a list of drinkers');\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbnVmYWN0dXJlci1kZXRhaWxzL21hbnVmYWN0dXJlci1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <h1 class=\\\"display-4\\\">{{manufName}}</h1>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <h5>Highest Sales Regions</h5>\\r\\n  <p-table [value]=\\\"highSales\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n    <ng-template pTemplate=\\\"header\\\">\\r\\n      <tr>\\r\\n        <th>City</th>\\r\\n        <th>State</th>\\r\\n        <th>Sales</th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-sale>\\r\\n        <tr>\\r\\n        <td>{{sale.city}}</td>\\r\\n        <td>{{sale.state}}</td>\\r\\n        <td>{{sale.sales}}</td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </p-table>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<br>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <h5>Regional Manufacturer Likes</h5>\\r\\n  <p-table [value]=\\\"likesSales\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n    <ng-template pTemplate=\\\"header\\\">\\r\\n      <tr>\\r\\n        <th>City</th>\\r\\n        <th>State</th>\\r\\n        <th>Likes</th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-sale>\\r\\n        <tr>\\r\\n        <td>{{sale.city}}</td>\\r\\n        <td>{{sale.state}}</td>\\r\\n        <td>{{sale.likes}}</td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </p-table>\\r\\n</div>\\r\\n\\r\\n<br>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ManufacturerService } from '../manufacturer.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-manufacturer-details',\r\n  templateUrl: './manufacturer-details.component.html',\r\n  styleUrls: ['./manufacturer-details.component.css']\r\n})\r\nexport class ManufacturerDetailsComponent implements OnInit {\r\n\r\n  manufName: string;\r\n  highSales: any[];\r\n  likesSales: any[];\r\n\r\n\r\n  constructor(private manufacturerService: ManufacturerService, private route: ActivatedRoute) { \r\n\r\n    route.paramMap.subscribe((paramMap) => {\r\n      this.manufName = paramMap.get('manufacturer');\r\n      \r\n      \r\n      manufacturerService.manuf_high_sales(this.manufName).subscribe(\r\n       data =>{\r\n         this.highSales = data;\r\n       },\r\n       (error: HttpResponse<any>) => {\r\n         if (error.status === 404){\r\n           alert('Manufacturer not found');\r\n         }\r\n         else{\r\n           console.error(error.status + '-' + error.body);\r\n           alert('error occurred on the server. please check the browser console');\r\n         }\r\n       }\r\n      );\r\n\r\n\r\n      manufacturerService.manuf_likes(this.manufName).subscribe(\r\n        data =>{\r\n          this.likesSales = data;\r\n        }\r\n      );\r\n\r\n\r\n\r\n      });\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ManufacturerService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  get_manufacturers(){\r\n    return this.http.get<any[]>('/api/manufacturers')\r\n  }\r\n\r\n\r\n  manuf_high_sales(manuf: string){\r\n    return this.http.get<any[]>('/api/manufacturers/' + manuf)\r\n  }\r\n\r\n\r\n  manuf_likes(manuf: string){\r\n    return this.http.get<any[]>('/api/manufacturers/' + manuf + '/likes')\r\n  }\r\n\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbnVmYWN0dXJlcnMvbWFudWZhY3R1cmVycy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h2 class=\\\"text center font weight light\\\">Manufacturers</h2>\\r\\n  <p-table [value]=\\\"manuf\\\" [paginator]=\\\"true\\\" [rows]=\\\"15\\\">\\r\\n    <ng-template pTemplate=\\\"header\\\">\\r\\n      <tr>\\r\\n        <th>Name</th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-manuf>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <a routerLink = \\\"/manufacturers/{{manuf.manufacturer}}\\\"> \\r\\n            {{manuf.manufacturer}}\\r\\n          </a>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </p-table>\\r\\n</div>  \\r\\n<br>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ManufacturerService } from '../manufacturer.service';\r\n\r\n@Component({\r\n  selector: 'app-manufacturers',\r\n  templateUrl: './manufacturers.component.html',\r\n  styleUrls: ['./manufacturers.component.css']\r\n})\r\nexport class ManufacturersComponent implements OnInit {\r\n\r\n\r\n  manuf: any[];\r\n\r\n\r\n  constructor(private manufacturerService: ManufacturerService ) {\r\n\r\n    this.manufacturerService.get_manufacturers().subscribe(\r\n      data => {\r\n        this.manuf = data;\r\n      },\r\n      error => {\r\n        alert('Could not retrieve the list');\r\n      }\r\n\r\n    );\r\n\r\n\r\n\r\n   } //end of constructor\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\nexport interface Bar{\r\n  name: string;\r\n  open : string;\r\n  close : string;\r\n  license : string;\r\n  phone : string;\r\n  address : string;\r\n  city : string;\r\n  state : string; \r\n}\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModifyService {\r\n\r\n  constructor(\r\n    public http: HttpClient\r\n    ) { }\r\n\r\n\r\n  submitQuery(post: string) {\r\n    const body={q: post}\r\n    return this.http.post<string>('/api/sqlQuery', body);\r\n  }\r\n\r\n  getBars() {\r\n    return this.http.get<Bar[]>('/api/bar');\r\n  }\r\n\r\n  addBar(name: string, open : string, close : string, license : string, phone : string, address : string, city : string, state : string){\r\n    const body={\r\n      barName: name,\r\n      barOpen : open,\r\n      barClose : close,\r\n      barLicense : license,\r\n      barPhone : phone,\r\n      barAddress : address,\r\n      barCity : city,\r\n      barState : state\r\n    }\r\n    return this.http.post<string>('/api/addBar', body);\r\n\r\n  }\r\n\r\n  deleteBar(name: string){\r\n    return this.http.get<string>('/api/bar/delete/'+name);\r\n  }\r\n\r\n\r\n  getBartenders(){\r\n    return this.http.get<any[]>('/api/bartender')\r\n  }\r\n\r\n\r\n  addBartender(name: string){\r\n    const body={\r\n      bartenderName: name\r\n    }\r\n    return this.http.post<string>('/api/addBartender', body);\r\n\r\n  }\r\n\r\n  deleteBartender(name: string){\r\n    return this.http.get<string>('/api/bartender/delete/'+name);\r\n  }\r\n\r\n  getInventorys(){\r\n    return this.http.get<any[]>('/api/inventory')\r\n  }\r\n\r\n\r\n  getItems(){\r\n    return this.http.get<any[]>('/api/item')\r\n  }\r\n\r\n  getLikes(){\r\n    return this.http.get<any[]>('/api/like')\r\n  }\r\n\r\n  getSells(){\r\n    return this.http.get<any[]>('/api/sell')\r\n  }\r\n\r\n\r\n  getShifts(){\r\n    return this.http.get<any[]>('/api/shift')\r\n  }\r\n\r\n\r\n  addShift(bar: string, bartender : string, start : string, end : string, date:string){\r\n    const body={\r\n      shiftBar: bar,\r\n      shiftBartender : bartender,\r\n      shiftStart : start,\r\n      shiftEnd : end,\r\n      shiftDate : date\r\n    }\r\n    return this.http.post<string>('/api/addShift', body);\r\n\r\n  }\r\n\r\n  deleteShift(bar: string, bartender : string, start : string, end : string, date:string){\r\n    const body={\r\n      shiftBar: bar,\r\n      shiftBartender : bartender,\r\n      shiftStart : start,\r\n      shiftEnd : end,\r\n      shiftDate : date\r\n    }\r\n    return this.http.get<string>('/api/shift/delete/'+ body);\r\n  }\r\n\r\n\r\n\r\n  getTransactions(){\r\n    return this.http.get<any[]>('/api/transaction')\r\n  }\r\n\r\n  addTransaction(bill: string, item : string, count : string){\r\n    const body={\r\n      transactionBill: bill,\r\n      transactionItem : item,\r\n      transactionCount : count,\r\n    }\r\n    return this.http.post<string>('/api/addTransaction', body);\r\n\r\n  }\r\n\r\n  deleteTransaction(name: string){\r\n    return this.http.get<string>('/api/transaction/delete/'+ name);\r\n  }\r\n\r\n\r\n  getBeers(){\r\n    return this.http.get<any[]>('/api/beer')\r\n  }\r\n\r\n\r\n  addBeer(item: string, manufacturer: string){\r\n    const body={\r\n      itemName: item,\r\n      manufacturerName: manufacturer\r\n    }\r\n    return this.http.post<string>('/api/addBeer', body);\r\n\r\n  }\r\n\r\n  deleteBeer(item: string){\r\n    return this.http.get<string>('/api/beer/delete/'+item);\r\n  }\r\n\r\n  getBills(){\r\n    return this.http.get<any[]>('/api/bill')\r\n  }\r\n\r\n  \r\n\r\n\r\n  getDrinkers(){\r\n    return this.http.get<any[]>('/api/drinker')\r\n  }\r\n\r\n\r\n  addDrinker(name: string, city: string, state: string, phone: string, address: string){\r\n    const body={\r\n      drinkerName: name,\r\n      cityName: city,\r\n      stateName: state,\r\n      phoneName: phone,\r\n      addressName: address\r\n    }\r\n    return this.http.post<string>('/api/addDrinker', body);\r\n\r\n  }\r\n\r\n  deleteDrinker(name: string){\r\n    return this.http.get<string>('/api/drinker/delete/'+name);\r\n  }\r\n\r\n\r\n  getFood(){\r\n    return this.http.get<any[]>('/api/food')\r\n  }\r\n\r\n\r\n\r\n  getFreqs(){\r\n    return this.http.get<any[]>('/api/freqs')\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGlmeS9tb2RpZnkuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <h1 class=\\\"display-4\\\">Modify the Database</h1>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\" width=\\\"425\\\" #cd>\\r\\n        <p-footer>\\r\\n            <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" label=\\\"Yes\\\" (click)=\\\"cd.accept()\\\"></button>\\r\\n            <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" label=\\\"No\\\" (click)=\\\"cd.reject()\\\"></button>\\r\\n\\r\\n          </p-footer>\\r\\n    </p-confirmDialog>\\r\\n\\r\\n  <br><br>\\r\\n  <p-tabView >\\r\\n\\r\\n    <!------------------------------------- Bars Tab ----------------------------------------------------->\\r\\n      <p-tabPanel header=\\\"Bars\\\">\\r\\n          <br>\\r\\n          <button pButton type=\\\"button\\\" (click)=\\\"insertBarEvent($event)\\\" label=\\\"Insert A New Bar\\\" ></button>\\r\\n            <div class=\\\"ui-g ui-fluid\\\">\\r\\n                <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                    <div class=\\\"ui-inputgroup\\\">\\r\\n                        <input id=bars-barName type=\\\"text\\\" pInputText placeholder=\\\"Bar Name\\\">         \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                    <div class=\\\"ui-inputgroup\\\">\\r\\n                        <input id=bars-barOpen type=\\\"text\\\" pInputText placeholder=\\\"Open Time\\\">         \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                    <div class=\\\"ui-inputgroup\\\">\\r\\n                        <input id=bars-barClose type=\\\"text\\\" pInputText placeholder=\\\"Close Time\\\">         \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                    <div class=\\\"ui-inputgroup\\\">\\r\\n                        <input id=bars-barLicense type=\\\"text\\\" pInputText placeholder=\\\"Bar License\\\">         \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                    <div class=\\\"ui-inputgroup\\\">\\r\\n                        <input id=bars-barPhone type=\\\"text\\\" pInputText placeholder=\\\"Phone Number\\\">         \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                    <div class=\\\"ui-inputgroup\\\">\\r\\n                        <input id=bars-barAddress type=\\\"text\\\" pInputText placeholder=\\\"Bar Address\\\">   \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                    <div class=\\\"ui-inputgroup\\\">\\r\\n                        <input id=bars-barCity type=\\\"text\\\" pInputText placeholder=\\\"City\\\">         \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                    <div class=\\\"ui-inputgroup\\\">\\r\\n                        <input id=bars-barState type=\\\"text\\\" pInputText placeholder=\\\"State\\\">      \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n            <br><br>\\r\\n            <button pButton type=\\\"button\\\" (click)=\\\"deleteBarClick($event)\\\" label=\\\"Delete A Bar\\\" ></button>\\r\\n            <div class=\\\"ui-g ui-fluid\\\">\\r\\n                <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                    <div class=\\\"ui-inputgroup\\\">\\r\\n                        <input id=bars-barDelete type=\\\"text\\\" pInputText placeholder=\\\"Bar Name\\\">         \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n          \\r\\n          <br><br>\\r\\n          <p-table [value]=\\\"bars\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n              <ng-template pTemplate=\\\"header\\\">\\r\\n                <tr>\\r\\n                  <th>Name</th>\\r\\n                  <th>Open</th>\\r\\n                  <th>Close</th>\\r\\n                  <th>License</th>\\r\\n                  <th>Phone</th>\\r\\n                  <th>Address</th>\\r\\n                  <th>City</th>\\r\\n                  <th>State</th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template pTemplate=\\\"body\\\" let-bar>\\r\\n                <tr>\\r\\n                  <td>{{ bar.name }}</td>\\r\\n                  <td>{{ bar.open }}</td>\\r\\n                  <td>{{ bar.close }}</td>\\r\\n                  <td>{{ bar.license }}</td>\\r\\n                  <td>{{ bar.phone }}</td>\\r\\n                  <td>{{ bar.address }}</td>\\r\\n                  <td>{{ bar.city }}</td>\\r\\n                  <td>{{ bar.state }}</td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </p-table>\\r\\n      </p-tabPanel>\\r\\n      <!------------------------------------- Bars Tab ----------------------------------------------------->\\r\\n\\r\\n\\r\\n\\r\\n      <!------------------------------------- Bartenders Tab ---------------------------------------------->\\r\\n      <p-tabPanel header=\\\"Bartenders\\\">\\r\\n            <br>\\r\\n            <button pButton type=\\\"button\\\" (click)=\\\"insertBartenderEvent($event)\\\" label=\\\"Insert A New Bartender\\\" ></button>\\r\\n            <div class=\\\"ui-g ui-fluid\\\">\\r\\n              <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                  <div class=\\\"ui-inputgroup\\\">\\r\\n                      <input id=bartender-bartenderName type=\\\"text\\\" pInputText placeholder=\\\"Bartender Name\\\">         \\r\\n                  </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n            <br><br>\\r\\n            <button pButton type=\\\"button\\\" (click)=\\\"deleteBartenderClick($event)\\\" label=\\\"Delete A Bartender\\\" ></button>\\r\\n            <div class=\\\"ui-g ui-fluid\\\">\\r\\n              <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                  <div class=\\\"ui-inputgroup\\\">\\r\\n                      <input id=bartender-bartenderDelete type=\\\"text\\\" pInputText placeholder=\\\"Bartender Name\\\">         \\r\\n                  </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <br><br>\\r\\n          <p-table [value]=\\\"bartenders\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n              <ng-template pTemplate=\\\"header\\\">\\r\\n                <tr>\\r\\n                  <th>Name</th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template pTemplate=\\\"body\\\" let-bartender>\\r\\n                <tr>\\r\\n                  <td>{{ bartender.name }}</td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </p-table>\\r\\n      </p-tabPanel>\\r\\n      <!------------------------------------- Bartenders Tab ---------------------------------------------->\\r\\n\\r\\n     <!------------------------------------- Beers Tab ---------------------------------------------->\\r\\n     <p-tabPanel header=\\\"Beers\\\">\\r\\n        <br>\\r\\n        <button pButton type=\\\"button\\\" (click)=\\\"insertBeerEvent($event)\\\" label=\\\"Insert A New Beer\\\" ></button>\\r\\n        <div class=\\\"ui-g ui-fluid\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=beer-beerName type=\\\"text\\\" pInputText placeholder=\\\"Beer Name\\\">          \\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                <div class=\\\"ui-inputgroup\\\">\\r\\n                    <input id=beer-manufacturerName type=\\\"text\\\" pInputText placeholder=\\\"Manufacturer Name\\\">           \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <br><br>\\r\\n        <button pButton type=\\\"button\\\" (click)=\\\"deleteBeerClick($event)\\\" label=\\\"Delete A Beer\\\" ></button>\\r\\n        <div class=\\\"ui-g ui-fluid\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=beer-beerDelete type=\\\"text\\\" pInputText placeholder=\\\"Beer Name\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <br><br>\\r\\n      <p-table [value]=\\\"beers\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n          <ng-template pTemplate=\\\"header\\\">\\r\\n            <tr>\\r\\n              <th>Item</th>\\r\\n              <th>Manufacturer</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template pTemplate=\\\"body\\\" let-beer>\\r\\n            <tr>\\r\\n              <td>{{ beer.item }}</td>\\r\\n              <td>{{beer.manufacturer}}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </p-table>\\r\\n  </p-tabPanel>\\r\\n  <!------------------------------------- Beers Tab ---------------------------------------------->\\r\\n\\r\\n\\r\\n  <!------------------------------------- Beers Tab ---------------------------------------------->\\r\\n  <p-tabPanel header=\\\"Bills\\\">\\r\\n        <br>\\r\\n\\r\\n\\r\\n        <br><br>\\r\\n      <p-table [value]=\\\"bills\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n          <ng-template pTemplate=\\\"header\\\">\\r\\n            <tr>\\r\\n              <th>ID</th>\\r\\n              <th>Time</th>\\r\\n              <th>Date</th>\\r\\n              <th>Drinker</th>\\r\\n              <th>Bar</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template pTemplate=\\\"body\\\" let-bill>\\r\\n            <tr>\\r\\n              <td>{{ bill.id }}</td>\\r\\n              <td>{{bill.time}}</td>\\r\\n              <td>{{ bill.date }}</td>\\r\\n              <td>{{ bill.drinker }}</td>\\r\\n              <td>{{ bill.bar }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </p-table>\\r\\n  </p-tabPanel>\\r\\n  <!------------------------------------- Beers Tab ---------------------------------------------->\\r\\n\\r\\n\\r\\n\\r\\n  <!------------------------------------- Drinkers Tab ---------------------------------------------->\\r\\n  <p-tabPanel header=\\\"Drinkers\\\">\\r\\n        <br>\\r\\n        <button pButton type=\\\"button\\\" (click)=\\\"insertDrinkerEvent($event)\\\" label=\\\"Insert A New Drinker\\\" ></button>\\r\\n        <div class=\\\"ui-g ui-fluid\\\">\\r\\n                <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                        <div class=\\\"ui-inputgroup\\\">\\r\\n                            <input id=drinker-drinkerName type=\\\"text\\\" pInputText placeholder=\\\"Drinker Name\\\">         \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                        <div class=\\\"ui-inputgroup\\\">\\r\\n                            <input id=drinker-phoneName type=\\\"text\\\" pInputText placeholder=\\\"Phone Number\\\">         \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                        <div class=\\\"ui-inputgroup\\\">\\r\\n                            <input id=drinker-addressName type=\\\"text\\\" pInputText placeholder=\\\"Address\\\">         \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                        <div class=\\\"ui-inputgroup\\\">\\r\\n                            <input id=drinker-cityName type=\\\"text\\\" pInputText placeholder=\\\"City\\\">         \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                        <div class=\\\"ui-inputgroup\\\">\\r\\n                            <input id=drinker-stateName type=\\\"text\\\" pInputText placeholder=\\\"State\\\">         \\r\\n                        </div>\\r\\n                    </div>\\r\\n             \\r\\n        </div>\\r\\n\\r\\n\\r\\n        <br><br>\\r\\n        <button pButton type=\\\"button\\\" (click)=\\\"deleteDrinkerClick($event)\\\" label=\\\"Delete A Drinker\\\" ></button>\\r\\n        <div class=\\\"ui-g ui-fluid\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=drinker-drinkerDelete type=\\\"text\\\" pInputText placeholder=\\\"Drinker Name\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <br><br>\\r\\n      <p-table [value]=\\\"drinkers\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n          <ng-template pTemplate=\\\"header\\\">\\r\\n            <tr>\\r\\n              <th>Name</th>\\r\\n              <th>Phone</th>\\r\\n              <th>Address</th>\\r\\n              <th>City</th>\\r\\n              <th>State</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template pTemplate=\\\"body\\\" let-drinker>\\r\\n            <tr>\\r\\n              <td>{{drinker.name}}</td>\\r\\n              <td>{{drinker.phone}}</td>\\r\\n              <td>{{drinker.address}}</td>\\r\\n              <td>{{drinker.city}}</td>\\r\\n              <td>{{drinker.state}}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </p-table>\\r\\n  </p-tabPanel>\\r\\n   <!------------------------------------- Drinkers Tab ---------------------------------------------->\\r\\n\\r\\n\\r\\n    <!------------------------------------- Food Tab ---------------------------------------------->\\r\\n    <p-tabPanel header=\\\"Food\\\">\\r\\n            <br>\\r\\n\\r\\n\\r\\n\\r\\n            <br><br>\\r\\n          <p-table [value]=\\\"foods\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n              <ng-template pTemplate=\\\"header\\\">\\r\\n                <tr>\\r\\n                  <th>Item</th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template pTemplate=\\\"body\\\" let-food>\\r\\n                <tr>\\r\\n                  <td>{{food.item}}</td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </p-table>\\r\\n      </p-tabPanel>\\r\\n       <!------------------------------------- Food Tab ---------------------------------------------->\\r\\n\\r\\n\\r\\n       <!------------------------------ Frequents Tab ---------------------------------------------->\\r\\n       <p-tabPanel header=\\\"Frequents\\\">\\r\\n            <br>\\r\\n\\r\\n\\r\\n\\r\\n            <br><br>\\r\\n          <p-table [value]=\\\"frequents\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n              <ng-template pTemplate=\\\"header\\\">\\r\\n                <tr>\\r\\n                  <th>Drinker</th>\\r\\n                  <th>Bar</th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template pTemplate=\\\"body\\\" let-freq>\\r\\n                <tr>\\r\\n                  <td>{{freq.drinker}}</td>\\r\\n                  <td>{{freq.bar}}</td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </p-table>\\r\\n      </p-tabPanel>\\r\\n      <!------------------------------ Frequents Tab ---------------------------------------------->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!------------------------------------- Inventorys Tab ---------------------------------------------->\\r\\n<p-tabPanel header=\\\"Inventory\\\">\\r\\n    <br>\\r\\n    <!-- <button pButton type=\\\"button\\\" (click)=\\\"insertTransactionEvent($event)\\\" label=\\\"Insert A New Bar\\\" ></button>\\r\\n      <div class=\\\"ui-g ui-fluid\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionBill type=\\\"text\\\" pInputText placeholder=\\\"Bill\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionItem type=\\\"text\\\" pInputText placeholder=\\\"Item\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionCount type=\\\"text\\\" pInputText placeholder=\\\"Count\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n        \\r\\n      </div>\\r\\n      \\r\\n      <br><br>\\r\\n      <button pButton type=\\\"button\\\" (click)=\\\"deleteTransactionClick($event)\\\" label=\\\"Delete A Transaction\\\" ></button>\\r\\n      <div class=\\\"ui-g ui-fluid\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionDelete type=\\\"text\\\" pInputText placeholder=\\\"Bill\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n     -->\\r\\n    <br><br>\\r\\n    <p-table [value]=\\\"inventorys\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n          <tr>\\r\\n            <th>Count</th>\\r\\n            <th>Bar</th>\\r\\n            <th>Item</th>\\r\\n\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-inventory>\\r\\n          <tr>\\r\\n            <td>{{ inventory.count }}</td>\\r\\n            <td>{{ inventory.bar }}</td>\\r\\n            <td>{{ inventory.item }}</td>\\r\\n\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </p-table>\\r\\n</p-tabPanel>\\r\\n<!------------------------------------- Inventorys Tab ---------------------------------------------->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!------------------------------------- Items Tab ---------------------------------------------->\\r\\n<p-tabPanel header=\\\"Items\\\">\\r\\n    <br>\\r\\n    <!-- <button pButton type=\\\"button\\\" (click)=\\\"insertTransactionEvent($event)\\\" label=\\\"Insert A New Bar\\\" ></button>\\r\\n      <div class=\\\"ui-g ui-fluid\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionBill type=\\\"text\\\" pInputText placeholder=\\\"Bill\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionItem type=\\\"text\\\" pInputText placeholder=\\\"Item\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionCount type=\\\"text\\\" pInputText placeholder=\\\"Count\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n        \\r\\n      </div>\\r\\n      \\r\\n      <br><br>\\r\\n      <button pButton type=\\\"button\\\" (click)=\\\"deleteTransactionClick($event)\\\" label=\\\"Delete A Transaction\\\" ></button>\\r\\n      <div class=\\\"ui-g ui-fluid\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionDelete type=\\\"text\\\" pInputText placeholder=\\\"Bill\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n     -->\\r\\n    <br><br>\\r\\n    <p-table [value]=\\\"items\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n          <tr>\\r\\n            <th>Name</th>\\r\\n\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-item>\\r\\n          <tr>\\r\\n            <td>{{ item.name }}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </p-table>\\r\\n</p-tabPanel>\\r\\n<!------------------------------------- Items Tab ---------------------------------------------->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n <!------------------------------------- Likes Tab ---------------------------------------------->\\r\\n <p-tabPanel header=\\\"Likes\\\">\\r\\n    <br>\\r\\n    <!-- <button pButton type=\\\"button\\\" (click)=\\\"insertTransactionEvent($event)\\\" label=\\\"Insert A New Bar\\\" ></button>\\r\\n      <div class=\\\"ui-g ui-fluid\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionBill type=\\\"text\\\" pInputText placeholder=\\\"Bill\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionItem type=\\\"text\\\" pInputText placeholder=\\\"Item\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionCount type=\\\"text\\\" pInputText placeholder=\\\"Count\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n        \\r\\n      </div>\\r\\n      \\r\\n      <br><br>\\r\\n      <button pButton type=\\\"button\\\" (click)=\\\"deleteTransactionClick($event)\\\" label=\\\"Delete A Transaction\\\" ></button>\\r\\n      <div class=\\\"ui-g ui-fluid\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionDelete type=\\\"text\\\" pInputText placeholder=\\\"Bill\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n     -->\\r\\n    <br><br>\\r\\n    <p-table [value]=\\\"likes\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n          <tr>\\r\\n            <th>Drinker</th>\\r\\n            <th>Item</th>\\r\\n\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-like>\\r\\n          <tr>\\r\\n            <td>{{ like.drinker }}</td>\\r\\n            <td>{{ like.item }}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </p-table>\\r\\n</p-tabPanel>\\r\\n<!------------------------------------- Likes Tab ---------------------------------------------->\\r\\n\\r\\n\\r\\n<!------------------------------------- Sells Tab ---------------------------------------------->\\r\\n<p-tabPanel header=\\\"Sells\\\">\\r\\n    <br>\\r\\n    <!-- <button pButton type=\\\"button\\\" (click)=\\\"insertSellsEvent($event)\\\" label=\\\"Insert A New Sells\\\" ></button>\\r\\n      <div class=\\\"ui-g ui-fluid\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionBill type=\\\"text\\\" pInputText placeholder=\\\"Bill\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionItem type=\\\"text\\\" pInputText placeholder=\\\"Item\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionCount type=\\\"text\\\" pInputText placeholder=\\\"Count\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n        \\r\\n      </div>\\r\\n      \\r\\n      <br><br>\\r\\n      <button pButton type=\\\"button\\\" (click)=\\\"deleteTransactionClick($event)\\\" label=\\\"Delete A Transaction\\\" ></button>\\r\\n      <div class=\\\"ui-g ui-fluid\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionDelete type=\\\"text\\\" pInputText placeholder=\\\"Bill\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n     -->\\r\\n    <br><br>\\r\\n    <p-table [value]=\\\"sells\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n          <tr>\\r\\n            <th>Price</th>\\r\\n            <th>Bar</th>\\r\\n            <th>Item</th>\\r\\n\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-sell>\\r\\n          <tr>\\r\\n            <td>{{ sell.price }}</td>\\r\\n            <td>{{ sell.bar }}</td>\\r\\n            <td>{{ sell.item }}</td>\\r\\n\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </p-table>\\r\\n</p-tabPanel>\\r\\n<!------------------------------------- Likes Tab ---------------------------------------------->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n <!------------------------------------- Shifts Tab ---------------------------------------------->\\r\\n <p-tabPanel header=\\\"Shifts\\\">\\r\\n    <br>\\r\\n    <!-- <button pButton type=\\\"button\\\" (click)=\\\"insertTransactionEvent($event)\\\" label=\\\"Insert A New Bar\\\" ></button>\\r\\n      <div class=\\\"ui-g ui-fluid\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionBill type=\\\"text\\\" pInputText placeholder=\\\"Bill\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionItem type=\\\"text\\\" pInputText placeholder=\\\"Item\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionCount type=\\\"text\\\" pInputText placeholder=\\\"Count\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n        \\r\\n      </div>\\r\\n      \\r\\n      <br><br>\\r\\n      <button pButton type=\\\"button\\\" (click)=\\\"deleteTransactionClick($event)\\\" label=\\\"Delete A Transaction\\\" ></button>\\r\\n      <div class=\\\"ui-g ui-fluid\\\">\\r\\n          <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                  <input id=transactions-transactionDelete type=\\\"text\\\" pInputText placeholder=\\\"Bill\\\">         \\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n     -->\\r\\n    <br><br>\\r\\n    <p-table [value]=\\\"shifts\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n          <tr>\\r\\n            <th>Bar</th>\\r\\n            <th>Bartender</th>\\r\\n            <th>Start</th>\\r\\n            <th>End</th>\\r\\n            <th>Date</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-shift>\\r\\n          <tr>\\r\\n            <td>{{ shift.bar }}</td>\\r\\n            <td>{{ shift.bartender }}</td>\\r\\n            <td>{{ shift.start }}</td>\\r\\n            <td>{{ shift.end }}</td>\\r\\n            <td>{{ shift.date }}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </p-table>\\r\\n</p-tabPanel>\\r\\n<!------------------------------------- Shifts Tab ---------------------------------------------->\\r\\n\\r\\n\\r\\n            <!------------------------------------- Transactions Tab ---------------------------------------------->\\r\\n            <p-tabPanel header=\\\"Transactions\\\">\\r\\n                <br>\\r\\n                <button pButton type=\\\"button\\\" (click)=\\\"insertTransactionEvent($event)\\\" label=\\\"Insert A New Bar\\\" ></button>\\r\\n                  <div class=\\\"ui-g ui-fluid\\\">\\r\\n                      <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                          <div class=\\\"ui-inputgroup\\\">\\r\\n                              <input id=transactions-transactionBill type=\\\"text\\\" pInputText placeholder=\\\"Bill\\\">         \\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                          <div class=\\\"ui-inputgroup\\\">\\r\\n                              <input id=transactions-transactionItem type=\\\"text\\\" pInputText placeholder=\\\"Item\\\">         \\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                          <div class=\\\"ui-inputgroup\\\">\\r\\n                              <input id=transactions-transactionCount type=\\\"text\\\" pInputText placeholder=\\\"Count\\\">         \\r\\n                          </div>\\r\\n                      </div>\\r\\n                    \\r\\n                  </div>\\r\\n                  \\r\\n                  <br><br>\\r\\n                  <button pButton type=\\\"button\\\" (click)=\\\"deleteTransactionClick($event)\\\" label=\\\"Delete A Transaction\\\" ></button>\\r\\n                  <div class=\\\"ui-g ui-fluid\\\">\\r\\n                      <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n                          <div class=\\\"ui-inputgroup\\\">\\r\\n                              <input id=transactions-transactionDelete type=\\\"text\\\" pInputText placeholder=\\\"Bill\\\">         \\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                \\r\\n                <br><br>\\r\\n                <p-table [value]=\\\"transactions\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n                    <ng-template pTemplate=\\\"header\\\">\\r\\n                      <tr>\\r\\n                        <th>Bill</th>\\r\\n                        <th>Item</th>\\r\\n                        <th>Count</th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-transaction>\\r\\n                      <tr>\\r\\n                        <td>{{ transaction.bill }}</td>\\r\\n                        <td>{{ transaction.item }}</td>\\r\\n                        <td>{{ transaction.count }}</td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n            </p-tabPanel>\\r\\n          <!------------------------------------- Transactions Tab ---------------------------------------------->\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n  </p-tabView>\\r\\n  \\r\\n  \\r\\n  </div>\\r\\n  <br><br><br>\"","import { Component, OnInit } from '@angular/core';\r\nimport {ConfirmationService} from 'primeng/api';\r\nimport {ModifyService, Bar/*, Drinker,Frequent,Likes, Beer, Food, SoftDrink*/} from '../modify.service';\r\n@Component({\r\n  selector: 'app-modify',\r\n  templateUrl: './modify.component.html',\r\n  styleUrls: ['./modify.component.css'],\r\n  providers: [ConfirmationService]\r\n})\r\nexport class ModifyComponent implements OnInit {\r\n  queryReturn: string;\r\n  bars: Bar[];\r\n  bartenders: any[];\r\n  shifts: any[];\r\n  transactions: any[];\r\n  likes:any[];\r\n  sells:any[];\r\n  items:any[];\r\n  inventorys:any[];\r\n  beers: any[];\r\n  bills: any[];\r\n  drinkers: any[];\r\n  foods: any[];\r\n  frequents: any[];\r\n \r\n  constructor(\r\n    private modifyService: ModifyService,\r\n    private confirmationService: ConfirmationService \r\n  ) { \r\n    this.modifyService.getBars().subscribe(\r\n      data => {\r\n        this.bars = data;\r\n      },\r\n      error => {\r\n        console.log('Could not retrieve a list of bars');\r\n      }\r\n    );\r\n\r\n\r\n    this.modifyService.getBartenders().subscribe(\r\n      data => {\r\n        this.bartenders = data;\r\n      }\r\n    ); \r\n\r\n\r\n    this.modifyService.getBeers().subscribe(\r\n      data => {\r\n        this.beers = data;\r\n      }\r\n    ); \r\n\r\n    this.modifyService.getBills().subscribe(\r\n      data => {\r\n        this.bills = data;\r\n      }\r\n    ); \r\n\r\n\r\n    this.modifyService.getDrinkers().subscribe(\r\n      data => {\r\n        this.drinkers = data;\r\n      }\r\n    ); \r\n\r\n\r\n    this.modifyService.getFood().subscribe(\r\n      data => {\r\n        this.foods = data;\r\n      }\r\n    );\r\n\r\n\r\n    this.modifyService.getFreqs().subscribe(\r\n      data => {\r\n        this.frequents = data;\r\n      }\r\n    ); \r\n\r\n    this.modifyService.getInventorys().subscribe(\r\n      data => {\r\n        this.inventorys = data;\r\n      }\r\n    ); \r\n\r\n\r\n    this.modifyService.getItems().subscribe(\r\n      data => {\r\n        this.items = data;\r\n      }\r\n    ); \r\n\r\n    this.modifyService.getLikes().subscribe(\r\n      data => {\r\n        this.likes = data;\r\n      }\r\n    ); \r\n\r\n    this.modifyService.getSells().subscribe(\r\n      data => {\r\n        this.sells = data;\r\n      }\r\n    ); \r\n\r\n    this.modifyService.getShifts().subscribe(\r\n      data => {\r\n        this.shifts = data;\r\n      }\r\n    ); \r\n\r\n    this.modifyService.getTransactions().subscribe(\r\n      data => {\r\n        this.transactions = data;\r\n      }\r\n    ); \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  submitQuery(){\r\n    var sqlString=(document.getElementById(\"sqlquery\") as HTMLInputElement).value;\r\n\r\n    this.modifyService.submitQuery(sqlString).subscribe(\r\n      data=>{\r\n        this.queryReturn=data;\r\n      },\r\n       error => {\r\n        alert('Could not execute query');\r\n      }\r\n\r\n    )\r\n  }\r\n  \r\n\r\n\r\n  insertBarEvent(event){\r\n    let barName:string=(document.getElementById(\"bars-barName\") as HTMLInputElement).value;\r\n    let barOpen:string=(document.getElementById(\"bars-barOpen\") as HTMLInputElement).value;\r\n    let barClose:string=(document.getElementById(\"bars-barClose\") as HTMLInputElement).value;\r\n    let barLicense:string=(document.getElementById(\"bars-barLicense\") as HTMLInputElement).value;\r\n    let barPhone:string=(document.getElementById(\"bars-barPhone\") as HTMLInputElement).value;\r\n    let barAddress:string=(document.getElementById(\"bars-barAddress\") as HTMLInputElement).value;\r\n    let barCity:string=(document.getElementById(\"bars-barCity\") as HTMLInputElement).value;\r\n    let barState:string=(document.getElementById(\"bars-barState\") as HTMLInputElement).value;\r\n    this.modifyService.addBar(barName, barOpen, barClose, barLicense, barPhone, barAddress, barCity, barState).subscribe(\r\n      data=>{\r\n        alert(data)\r\n        window.location.reload();\r\n\r\n      },\r\n       error => {\r\n        alert('Could not add bar');\r\n      }\r\n      \r\n    );\r\n  }\r\n\r\n\r\n  \r\n  deleteBarClick(event){\r\n    let barDelete:string=(document.getElementById(\"bars-barDelete\") as HTMLInputElement).value;\r\n    this.modifyService.deleteBar(barDelete).subscribe(\r\n      data=>{\r\n        alert(data)\r\n        window.location.reload();\r\n\r\n      },\r\n       error => {\r\n        alert('Could not delete bar');\r\n      }\r\n      \r\n    );\r\n\r\n  }\r\n\r\n  \r\n  insertBartenderEvent(event){\r\n    let bartenderName:string=(document.getElementById(\"bartender-bartenderName\") as HTMLInputElement).value;\r\n    this.modifyService.addBartender(bartenderName).subscribe(\r\n      data=>{\r\n        alert(data)\r\n        window.location.reload();\r\n\r\n      },\r\n       error => {\r\n        alert('Could not add bartender');\r\n      }\r\n      \r\n    );\r\n  }\r\n\r\n\r\n  \r\n  deleteBartenderClick(event){\r\n    let bartenderDelete:string=(document.getElementById(\"bartender-bartenderDelete\") as HTMLInputElement).value;\r\n    this.modifyService.deleteBartender(bartenderDelete).subscribe(\r\n      data=>{\r\n        alert(data)\r\n        window.location.reload();\r\n\r\n      },\r\n       error => {\r\n        alert('Could not delete bartender');\r\n      }\r\n      \r\n    );\r\n\r\n  }\r\n  \r\n\r\n  insertTransactionEvent(event){\r\n    let transactionBill:string=(document.getElementById(\"transactions-transactionBill\") as HTMLInputElement).value;\r\n    let transactionItem:string=(document.getElementById(\"transactions-transactionItem\") as HTMLInputElement).value;\r\n    let transactionCount:string=(document.getElementById(\"transactions-transactionCount\") as HTMLInputElement).value;\r\n\r\n    this.modifyService.addTransaction(transactionBill, transactionItem, transactionCount).subscribe(\r\n      data=>{\r\n        alert(data)\r\n        window.location.reload();\r\n\r\n      },\r\n       error => {\r\n        alert('Could not add Transaction because of Foreign key');\r\n      }\r\n      \r\n    );\r\n  }\r\n  \r\n\r\n  deleteTransactionClick(event){\r\n    let transactionDelete:string=(document.getElementById(\"transaction-transactionDelete\") as HTMLInputElement).value;\r\n    this.modifyService.deleteTransaction(transactionDelete).subscribe(\r\n      data=>{\r\n        alert(data)\r\n        window.location.reload();\r\n\r\n      },\r\n       error => {\r\n        alert('Could not delete transaction');\r\n      }\r\n      \r\n    );\r\n\r\n  }\r\n\r\n  insertShiftEvent(event){\r\n    let Bar:string=(document.getElementById(\"shifts-shiftBar\") as HTMLInputElement).value;\r\n    let Bartender:string=(document.getElementById(\"shifts-shiftBartender\") as HTMLInputElement).value;\r\n    let Start:string=(document.getElementById(\"shifts-shiftStart\") as HTMLInputElement).value;\r\n    let End:string=(document.getElementById(\"shifts-shiftEnd\") as HTMLInputElement).value;\r\n    let shiftDate:string=(document.getElementById(\"shifts-shiftDate\") as HTMLInputElement).value;\r\n    this.modifyService.addShift(Bar, Bartender, Start,End, shiftDate).subscribe(\r\n      data=>{\r\n        alert(data)\r\n        window.location.reload();\r\n\r\n      },\r\n       error => {\r\n        alert('Could not add Shift because of Foreign key');\r\n      }\r\n      \r\n    );\r\n  }\r\n  \r\n\r\n  insertBeerEvent(event){\r\n    let itemName:string=(document.getElementById(\"beer-beerName\") as HTMLInputElement).value;\r\n    let manufacturerName:string=(document.getElementById(\"beer-manufacturerName\") as HTMLInputElement).value;\r\n    this.modifyService.addBeer(itemName, manufacturerName).subscribe(\r\n      data=>{\r\n        alert(data)\r\n        window.location.reload();\r\n\r\n      },\r\n       error => {\r\n        alert('Could not add beer because of foreign key');\r\n      }\r\n      \r\n    );\r\n  }\r\n\r\n\r\n  \r\n  deleteBeerClick(event){\r\n    let beerDelete:string=(document.getElementById(\"beer-beerDelete\") as HTMLInputElement).value;\r\n    this.modifyService.deleteBeer(beerDelete).subscribe(\r\n      data=>{\r\n        alert(data)\r\n        window.location.reload();\r\n\r\n      },\r\n       error => {\r\n        alert('Could not delete beer');\r\n      }\r\n      \r\n    );\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n   insertDrinkerEvent(event){\r\n    let drinkerName:string=(document.getElementById(\"drinker-drinkerName\") as HTMLInputElement).value;\r\n    let cityName:string=(document.getElementById(\"drinker-cityName\") as HTMLInputElement).value;\r\n    let stateName:string=(document.getElementById(\"drinker-stateName\") as HTMLInputElement).value;\r\n    let phoneName:string=(document.getElementById(\"drinker-phoneName\") as HTMLInputElement).value;\r\n    let addressName:string=(document.getElementById(\"drinker-addressName\") as HTMLInputElement).value;\r\n    this.modifyService.addDrinker(drinkerName, cityName, stateName, phoneName, addressName).subscribe(\r\n      data=>{\r\n        alert(data)\r\n        window.location.reload();\r\n\r\n      },\r\n       error => {\r\n        alert('Could not add drinker because of foreign key');\r\n      }\r\n      \r\n    );\r\n  }\r\n\r\n  deleteDrinkerClick(event){\r\n    let drinkerDelete:string=(document.getElementById(\"drinker-drinkerDelete\") as HTMLInputElement).value;\r\n    this.modifyService.deleteDrinker(drinkerDelete).subscribe(\r\n      data=>{\r\n        alert(data)\r\n        window.location.reload();\r\n\r\n      },\r\n       error => {\r\n        alert('Could not delete Drinker');\r\n      }\r\n      \r\n    );\r\n  }\r\n\r\n\r\n\r\n  // deleteShiftClick(event){\r\n  //   let barDelete:string=(document.getElementById(\"transaction-transactionDelete\") as HTMLInputElement).value;\r\n  //   let bartenderDelete:string=(document.getElementById(\"transaction-transactionDelete\") as HTMLInputElement).value;\r\n  //   let startDelete:string=(document.getElementById(\"transaction-transactionDelete\") as HTMLInputElement).value;\r\n  //   let endDelete:string=(document.getElementById(\"transaction-transactionDelete\") as HTMLInputElement).value;\r\n  //   let dateDelete:string=(document.getElementById(\"transaction-transactionDelete\") as HTMLInputElement).value;\r\n\r\n  //   this.modifyService.deleteShift(transactionDelete).subscribe(\r\n  //     data=>{\r\n  //       alert(data)\r\n  //       window.location.reload();\r\n\r\n  //     },\r\n  //      error => {\r\n  //       alert('Could not delete Shift');\r\n  //     }\r\n      \r\n  //   );\r\n\r\n  // }\r\n\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n  <div class=\\\"jumbotron jumbotron-fluid\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <h1 class=\\\"display-4\\\">Welcome to Bar Beer Drinker Plus!</h1>\\r\\n      <p class=\\\"lead\\\">Bar Page is Home Page</p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n<p-table [value]=\\\"bars\\\">\\r\\n  <ng-template pTemplate=\\\"header\\\">\\r\\n    <tr>\\r\\n      <th>Name</th>\\r\\n      <th>Open</th>\\r\\n      <th>Close</th>\\r\\n      <th>License</th>\\r\\n      <th>Phone</th>\\r\\n      <th>Address</th>\\r\\n      <th>City</th>\\r\\n      <th>State</th>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-bar>\\r\\n    <tr>\\r\\n      <td>\\r\\n        <a routerLink = \\\"/bars/{{ bar.name }}\\\">\\r\\n        {{bar.name}}\\r\\n        </a>\\r\\n      </td>\\r\\n      <td>{{bar.open}}</td>\\r\\n      <td>{{bar.close}}</td>\\r\\n      <td>{{bar.license}}</td>\\r\\n      <td>{{bar.phone}}</td>\\r\\n      <td>{{bar.address}}</td>\\r\\n      <td>{{bar.city}}</td>\\r\\n      <td>{{bar.state}}</td>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table>\\r\\n</div>\\r\\n\\r\\n<br><br>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { BarsService, Bar } from '../bars.service';\r\n\r\n@Component({ \r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  bars: Bar[];\r\n\r\n  constructor(\r\n    public barService : BarsService\r\n  ) {  this.getBars();\r\n  }\r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n\r\n  getBars(){\r\n    this.barService.getBars().subscribe(\r\n      data => {\r\n          this.bars = data;\r\n      },\r\n      error => {\r\n        alert('could not retrieve a list of bars');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}